name: CI
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: test (Python ${{ matrix.python-version }} on ${{ matrix.os-label }})
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: ["ubuntu-latest"]
        os-label: ["Ubuntu"]
        include:
          - {python-version: "3.8", os: "windows-latest", os-label: "Windows"}
          - {python-version: "3.8", os: "macos-latest", os-label: "macOS"}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install Dependencies
        run: |
          pip install poetry 
          poetry install
      - name: Build
        run: |
          poetry run black . --check
          poetry build
      - name: Run tests
        run: poetry run pytest
        env:
          COZE_TOKEN: ${{ secrets.COZE_TOKEN }}
          SPACE_ID_1: ${{ secrets.SPACE_ID_1 }}
          COZE_JWT_AUTH_CLIENT_ID: ${{ secrets.COZE_JWT_AUTH_CLIENT_ID }}
          COZE_JWT_AUTH_PRIVATE_KEY: ${{ secrets.COZE_JWT_AUTH_PRIVATE_KEY }}
          COZE_JWT_AUTH_KEY_ID: ${{ secrets.COZE_JWT_AUTH_KEY_ID }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  test_success:
    # this aggregates success state of all jobs listed in `needs`
    # this is the only required check to pass CI
    name: "Test success"
    if: always()
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: "Success"
        if: needs.test.result == 'success'
        run: true
        shell: bash
      - name: "Failure"
        if: needs.test.result != 'success'
        run: false
        shell: bash

  draft:
    runs-on: ubuntu-latest
    needs: test_success
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
